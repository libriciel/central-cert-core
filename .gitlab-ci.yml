image: gradle

stages:
  - test
  - package
#  - deploy

variables:
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle
  PROJECT_NAME: "central-cert-core"

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - .gradle/caches

before_script:
  - sed -i "s/DEVELOP/$CI_COMMIT_REF_NAME/g" build.gradle


# <editor-fold desc="Test">


junit:
  stage: test
  coverage: '/Total.*?([0-9]{1,3})%/'
  script:
    - gradle test
  after_script:
    - cat build/reports/jacoco/test/html/index.html


sonarqube:
  stage: test
  only:
    - develop # SonarQube Community is limited to one branch. 'develop' is the most relevant.
  script:
    - gradle sonar -Dsonar.host.url=https://sonarqube.libriciel.fr "-Dsonar.login=$SONAR_TOKEN"


# </editor-fold desc="Test">


# <editor-fold desc="Package">


jar:
  stage: package
  script:
    - gradle bootJar
  after_script:
    - mkdir $PROJECT_NAME
    - mv $PROJECT_NAME.service $PROJECT_NAME/
    - mv $PROJECT_NAME.conf $PROJECT_NAME/
    - mv build/libs/$PROJECT_NAME-*.jar $PROJECT_NAME/
    - cd $PROJECT_NAME
    - ln -s $PROJECT_NAME-*.jar $PROJECT_NAME.jar
    - cd ..
  artifacts:
    name: "$PROJECT_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - $PROJECT_NAME/*


# </editor-fold desc="Package">


# <editor-fold desc="Deploy">


docker:
  tags:
    - docker-build
  stage: deploy
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"

docker_latest:
  tags:
    - docker-build
  stage: deploy
  only:
    - tags
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:latest"


# </editor-fold desc="Deploy">

